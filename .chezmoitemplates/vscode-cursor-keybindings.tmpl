[
//   //==============================================================================
//   // WINDOW/EDITOR NAVIGATION
//   // Vim-style hjkl movement between editors, panels, and UI elements
//   //==============================================================================
// ===== SPLIT MANAGEMENT =====
{
  "key": "; w l",
  "command": "workbench.action.splitEditorRight",
  "when": "vim.mode === 'Normal'"
},
{
  "key": "; w h",
  "command": "workbench.action.splitEditorLeft",
  "when": "vim.mode === 'Normal'"
},
{
  "key": "; w j",
  "command": "workbench.action.splitEditorDown",
  "when": "vim.mode === 'Normal'"
},
{
  "key": "; w k",
  "command": "workbench.action.splitEditorUp",
  "when": "vim.mode === 'Normal'"
},
//   //==============================================================================
//   // CODE EDITING
//   // Powerful text and code manipulation shortcuts
//   //==============================================================================

//   // Move current line or selection up/down (equivalent to :m+ and :m- in Vim)
  {
    "key": "shift+j",
    "command": "editor.action.moveLinesDownAction",
    "when": "vim.mode !== 'Insert' && editorFocus"
  },
  {
    "key": "shift+k",
    "command": "editor.action.moveLinesUpAction",
    "when": "vim.mode !== 'Insert' && editorFocus"
  },
//   //==============================================================================
//   // FILE EXPLORER ACTIONS
//   // Vim-like file operations in the explorer panel
//   //==============================================================================

//   // Single-key file operations in explorer (matches NERDTree behavior)
//   // Rename selected file/folder
  {
    "key": "r",
    "command": "renameFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  // Copy selected file/folder
  {
    "key": "c",
    "command": "filesExplorer.copy",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  // Paste previously copied file/folder
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  // Cut selected file/folder
  {
    "key": "x",
    "command": "filesExplorer.cut",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  // Delete selected file/folder
  {
    "key": "d",
    "command": "deleteFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  // Create new file (like NERDTree's 'a')
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
//   // Create new folder at current location
  {
    "key": "shift+a",
    "command": "explorer.newFolder",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
//   // Open file in split to the side
  {
    "key": "s",
    "command": "explorer.openToSide",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
//   // Open file in a split below and focus on it (advanced split handling)
  {
    "key": "shift+s",
    "command": "runCommands",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus",
    "args": {
      "commands": [
        "workbench.action.splitEditorDown",
        "explorer.openAndPassFocus",
        "workbench.action.closeOtherEditors"
      ]
    }
  },
//   // Open file and focus on it
  {
    "key": "enter",
    "command": "explorer.openAndPassFocus",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },


]
